-- Driftwyn UI Module
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local DriftwynTabSystem = {
	Tabs = {}
}

function DriftwynTabSystem:Init()
	local DriftwynUI = Instance.new("ScreenGui")
	DriftwynUI.Name = "DriftwynUI"
	DriftwynUI.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
	DriftwynUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	local MainFrame = Instance.new("Frame")
	MainFrame.Name = "MainFrame"
	MainFrame.Parent = DriftwynUI
	MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	MainFrame.Size = UDim2.new(0, 618, 0, 350)

	local dragging, dragInput, dragStart, startPos
	MainFrame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = MainFrame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	MainFrame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)

	local UICorner = Instance.new("UICorner")
	UICorner.CornerRadius = UDim.new(0, 6)
	UICorner.Parent = MainFrame

	local function makeBorder(name, color, pos, size)
		local f = Instance.new("Frame")
		f.Name = name
		f.BackgroundColor3 = color
		f.BorderSizePixel = 0
		f.Position = pos
		f.Size = size
		f.Parent = MainFrame
	end

	makeBorder("TopFrame", Color3.fromRGB(255, 0, 0), UDim2.new(0, 0, 0, 0), UDim2.new(0, 623, 0, 6))
	makeBorder("LeftFrame", Color3.fromRGB(255, 0, 0), UDim2.new(0, 0, 0.0171, 0), UDim2.new(0, 8, 0, 338))
	makeBorder("RightFrame", Color3.fromRGB(255, 0, 0), UDim2.new(0.9953, 0, 0.0171, 0), UDim2.new(0, 8, 0, 344))
	makeBorder("ButtomFrame", Color3.fromRGB(255, 0, 0), UDim2.new(0, 0, 0.9828, 0), UDim2.new(0, 618, 0, 6))

	local Title = Instance.new("TextLabel")
	Title.Name = "Title"
	Title.Parent = MainFrame
	Title.BackgroundTransparency = 1
	Title.Position = UDim2.new(0.0129, 0, 0.0171, 0)
	Title.Size = UDim2.new(1, 0, 0, 30)
	Title.Font = Enum.Font.GothamBold
	Title.Text = "Driftwyn Hub"
	Title.TextColor3 = Color3.new(1, 1, 1)
	Title.TextSize = 16

	local ContentFrame = Instance.new("Frame")
	ContentFrame.Name = "ContentFrame"
	ContentFrame.Parent = MainFrame
	ContentFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	ContentFrame.Position = UDim2.new(0, 108, 0, 36)
	ContentFrame.Size = UDim2.new(0.9822, -100, 0.9657, -30)
	self.ContentFrame = ContentFrame

	local TabHolder = Instance.new("Frame")
	TabHolder.Name = "TabHolder"
	TabHolder.Parent = MainFrame
	TabHolder.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	TabHolder.Position = UDim2.new(0.0123, 0, 0.2143, 0)
	TabHolder.Size = UDim2.new(0.0712, 100, 0.854, -30)
	self.TabHolder = TabHolder

	local padding = Instance.new("UIPadding")
	padding.PaddingTop = UDim.new(0, 5)
	padding.PaddingLeft = UDim.new(0, 5)
	padding.PaddingRight = UDim.new(0, 5)
	padding.Parent = TabHolder

	local layout = Instance.new("UIListLayout")
	layout.Parent = TabHolder
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Padding = UDim.new(0, 5)
	layout.FillDirection = Enum.FillDirection.Vertical
	layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	layout.VerticalAlignment = Enum.VerticalAlignment.Top

	local img = Instance.new("ImageLabel")
	img.Name = "ImageLabel"
	img.Parent = MainFrame
	img.Position = UDim2.new(0.0129, 0, 0.02, 0)
	img.Size = UDim2.new(0, 144, 0, 66)
	img.Image = "rbxassetid://76102331237811"
	img.BackgroundTransparency = 1
end

function DriftwynTabSystem:AddTab(name)
	local tabButton = Instance.new("TextButton")
	tabButton.Name = name .. "_Tab"
	tabButton.Parent = self.TabHolder
	tabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	tabButton.Size = UDim2.new(1, -10, 0, 45)
	tabButton.Font = Enum.Font.GothamBold
	tabButton.Text = name
	tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	tabButton.TextSize = 14

	local corner = Instance.new("UICorner")
	corner.Parent = tabButton

	tabButton.MouseEnter:Connect(function()
		TweenService:Create(tabButton, TweenInfo.new(0.15), {
			BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		}):Play()
	end)
	tabButton.MouseLeave:Connect(function()
		TweenService:Create(tabButton, TweenInfo.new(0.15), {
			BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		}):Play()
	end)

	local tabFrame = Instance.new("Frame")
	tabFrame.Name = name .. "_Content"
	tabFrame.Size = UDim2.new(1, 0, 1, 0)
	tabFrame.BackgroundTransparency = 1
	tabFrame.Parent = self.ContentFrame
	tabFrame.Visible = #self.Tabs == 0

	local layout = Instance.new("UIListLayout")
	layout.Parent = tabFrame
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Padding = UDim.new(0, 8)

	tabButton.MouseButton1Click:Connect(function()
		for _, tab in pairs(self.Tabs) do
			tab.Frame.Visible = false
		end
		tabFrame.Visible = true
	end)

	local elements = {}

function elements:AddSlider(title, minValue, maxValue, defaultValue, callback)
	local index = #elements
	local container = Instance.new("Frame")
	container.Parent = tabFrame
	container.Size = UDim2.new(0, 250, 0, 40)
	container.Position = UDim2.new(0.0129, 0, 0, 75 + (index * 45))
	container.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	container.BorderSizePixel = 0

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 6)
	corner.Parent = container

	local titleLabel = Instance.new("TextLabel")
	titleLabel.Parent = container
	titleLabel.Text = title .. ": " .. tostring(defaultValue)
	titleLabel.Size = UDim2.new(1, -10, 0, 20)
	titleLabel.Position = UDim2.new(0, 5, 0, 0)
	titleLabel.Font = Enum.Font.Gotham
	titleLabel.TextSize = 14
	titleLabel.TextColor3 = Color3.new(1, 1, 1)
	titleLabel.BackgroundTransparency = 1
	titleLabel.TextXAlignment = Enum.TextXAlignment.Left

	local sliderBar = Instance.new("Frame")
	sliderBar.Parent = container
	sliderBar.Size = UDim2.new(0, 200, 0, 6)
	sliderBar.Position = UDim2.new(0, 10, 0, 25)
	sliderBar.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
	sliderBar.BorderSizePixel = 0
	local barCorner = Instance.new("UICorner", sliderBar)

	local fillBar = Instance.new("Frame")
	fillBar.Parent = sliderBar
	fillBar.Size = UDim2.new(0, 0, 1, 0)
	fillBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	fillBar.BorderSizePixel = 0
	local fillCorner = Instance.new("UICorner", fillBar)

	local knob = Instance.new("TextButton")
	knob.Parent = sliderBar
	knob.Size = UDim2.new(0, 20, 0, 20)
	knob.Position = UDim2.new(0, 0, -0.9, 0)
	knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	knob.BorderSizePixel = 0
	knob.Text = ""
	local knobCorner = Instance.new("UICorner", knob)
	knobCorner.CornerRadius = UDim.new(1, 0)

	local dragging = false
	local UserInputService = game:GetService("UserInputService")

	local function updateSlider(inputX)
		local sliderPos = sliderBar.AbsolutePosition.X
		local sliderSize = sliderBar.AbsoluteSize.X
		local relativeX = math.clamp(inputX - sliderPos, 0, sliderSize)
		local percent = relativeX / sliderSize
		local value = math.floor(minValue + (maxValue - minValue) * percent)

		fillBar.Size = UDim2.new(0, relativeX, 1, 0)
		knob.Position = UDim2.new(0, relativeX - knob.Size.X.Offset / 2, -0.9, 0)

		titleLabel.Text = title .. ": " .. tostring(value)

		if callback then
			pcall(callback, value)
		end
	end

	knob.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			updateSlider(input.Position.X)
		end
	end)

	-- Set to default
	task.wait()
	local sliderSize = sliderBar.AbsoluteSize.X
	local percent = (defaultValue - minValue) / (maxValue - minValue)
	updateSlider(sliderBar.AbsolutePosition.X + sliderSize * percent)

	table.insert(elements, container)
end

	function elements:AddButton(text, callback)
		local btn = Instance.new("TextButton")
		btn.Parent = tabFrame
		btn.Size = UDim2.new(0, 200, 0, 30)
		btn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
		btn.TextColor3 = Color3.new(1, 1, 1)
		btn.Font = Enum.Font.Gotham
		btn.Text = text
		btn.TextSize = 14
		btn.BorderSizePixel = 0

		btn.MouseButton1Click:Connect(function()
			pcall(callback)
		end)
	end

	function elements:AddToggle(title, defaultState, callback)
		local container = Instance.new("Frame")
		container.Parent = tabFrame
		container.Size = UDim2.new(0, 250, 0, 30)
		container.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		container.BorderSizePixel = 0

		local corner = Instance.new("UICorner")
		corner.CornerRadius = UDim.new(0, 6)
		corner.Parent = container

		local titleLabel = Instance.new("TextLabel")
		titleLabel.Parent = container
		titleLabel.Text = title
		titleLabel.Size = UDim2.new(0, 180, 1, 0)
		titleLabel.Position = UDim2.new(0, 10, 0, 0)
		titleLabel.Font = Enum.Font.Gotham
		titleLabel.TextSize = 14
		titleLabel.TextColor3 = Color3.new(1, 1, 1)
		titleLabel.BackgroundTransparency = 1
		titleLabel.TextXAlignment = Enum.TextXAlignment.Left

		local toggleButton = Instance.new("TextButton")
		toggleButton.Parent = container
		toggleButton.Size = UDim2.new(0, 30, 0, 30)
		toggleButton.Position = UDim2.new(1, -40, 0, 0)
		toggleButton.Font = Enum.Font.GothamBold
		toggleButton.TextSize = 20
		toggleButton.TextColor3 = Color3.new(1, 1, 1)
		toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		toggleButton.BorderSizePixel = 0
		toggleButton.Text = defaultState and "[✓]" or "[ ]"

		local toggleCorner = Instance.new("UICorner")
		toggleCorner.CornerRadius = UDim.new(0, 4)
		toggleCorner.Parent = toggleButton

		local state = defaultState

		toggleButton.MouseButton1Click:Connect(function()
			state = not state
			toggleButton.Text = state and "[✓]" or "[ ]"
			if callback then
				pcall(callback, state)
			end
		end)
	end

	table.insert(self.Tabs, { Name = name, Frame = tabFrame })
	return elements
end

return DriftwynTabSystem
